name: CI
'on':
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-dita:
    name: Build DITA
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      # ────────────────────────────────────────────────
      # 1️⃣ Build Bootstrap HTML
      # ────────────────────────────────────────────────
      - name: Build Bootstrap ⚙️
        uses: dita-ot/dita-ot-action@4.3
        with:
          install: |
            apt-get update -q
            export DEBIAN_FRONTEND=noninteractive
            apt-get install -qy --no-install-recommends nodejs
            nodejs -v
          plugins: |
            fox.jason.extend.css
            net.infotexture.dita-bootstrap
            net.infotexture.dita-bootstrap.lunr
            fox.jason.prismjs
            fox.jason.favicon
            fox.jason.open-graph
          project: .github/dita-ot/html.xml
          # If you have a DITAVal, add the following:
          # -- build: | 
          #    dita -i dita/document.ditamap -o out/html -f html5 --filter=myfilter.ditaval

      # ────────────────────────────────────────────────
      # 2️⃣ Deploy HTML to GitHub Pages
      # ────────────────────────────────────────────────
      - name: Deploy HTML 🚀
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: out/html

      # ────────────────────────────────────────────────
      # 3️⃣ Build Standard PDF
      # ────────────────────────────────────────────────
      - name: Build PDF 🖨️
        uses: dita-ot/dita-ot-action@4.3
        with:
          install: |
            apt-get update -q
            export DEBIAN_FRONTEND=noninteractive
            apt-get install -qy --no-install-recommends nodejs
            nodejs -v
          plugins: |
            fox.jason.extend.css
            fox.jason.prismjs
          build: |
            dita -i dita/document.ditamap -o out/pdf -f pdf --theme=.github/themes/theme.yaml --org.dita.index.skip="yes"
          # If you have a DITAVal, replace the previous line with:
          # dita -i dita/document.ditamap -o out/pdf -f pdf --theme=.github/themes/theme.yaml --org.dita.index.skip="yes" --filter=myfilter.ditaval

      # ────────────────────────────────────────────────
      # 4️⃣ Upload Standard PDF
      # ────────────────────────────────────────────────
      - name: Upload PDF 📚
        uses: actions/upload-artifact@v4
        with:
          name: dita-pdf
          path: 'out/pdf'

  # ─────────────────────────────────────────────────────
  # 5️⃣ Build Tagged PDF (PDF/UA Accessible Version)
  # ─────────────────────────────────────────────────────
  build-tagged-pdf:
    name: Build Tagged PDF (PDF/UA) 🏷️
    runs-on: ubuntu-latest
    needs: build-dita
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Create folders
        run: |
          mkdir -p .github/fo
          mkdir -p .github/pdfua

      - name: Install system fonts (Noto/DejaVu)
        run: |
          sudo apt-get update -q
          sudo apt-get install -qy --no-install-recommends \
            fonts-noto-core fonts-noto-mono fonts-dejavu-core

      - name: Write FOP config (PDF/UA + auto font embedding)
        run: |
          cat > .github/fo/fop.xconf <<'XML'
          <fop version="1.0">
            <!-- Enable structure tree for tagging -->
            <accessibility>true</accessibility>
            <renderers>
              <renderer mime="application/pdf">
                <!-- Enable PDF/UA tagging -->
                <pdf-ua-mode>PDF/UA-1</pdf-ua-mode>
                <fonts>
                  <!-- Auto-detect system fonts -->
                  <auto-detect/>
                </fonts>
                <!-- Optional PDF/A archival mode
                <pdf-a-mode>PDF/A-2u</pdf-a-mode>
                -->
              </renderer>
            </renderers>
          </fop>
          XML

      - name: Write minimal custom XSL (adds roles H1/H2)
        run: |
          cat > .github/pdfua/attrs.xsl <<'XSL'
          <?xml version="1.0" encoding="UTF-8"?>
          <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
            <!-- Import base pdf2 FO stylesheet -->
            <xsl:import href="plugin:org.dita.pdf2:xsl/fo/topic2fo.xsl"/>

            <!-- Topic title -> H1 -->
            <xsl:attribute-set name="topic.title" use-attribute-sets="__topic.title">
              <xsl:attribute name="role">H1</xsl:attribute>
            </xsl:attribute-set>

            <!-- Section title -> H2 -->
            <xsl:attribute-set name="section.title" use-attribute-sets="__section.title">
              <xsl:attribute name="role">H2</xsl:attribute>
            </xsl:attribute-set>
          </xsl:stylesheet>
          XSL

      - name: Build Tagged PDF (FOP/UA)
        uses: dita-ot/dita-ot-action@4.3
        with:
          # Only registry/distribution plugins here (no local zips/dirs needed)
          plugins: |
            fox.jason.extend.css
            fox.jason.prismjs
          build: |
            dita -i dita/document.ditamap \
                 -o out/pdf-ua \
                 -f pdf \
                 --theme=.github/themes/theme.yaml \
                 --args.fo.userconfig=.github/fo/fop.xconf \
                 --args.xsl.pdf=.github/pdfua/attrs.xsl \
                 --org.dita.index.skip="yes" \
                 --pdf.formatter=fop

      - name: Upload Tagged PDF 🧩
        uses: actions/upload-artifact@v4
        with:
          name: dita-pdf-ua
          path: 'out/pdf-ua'
